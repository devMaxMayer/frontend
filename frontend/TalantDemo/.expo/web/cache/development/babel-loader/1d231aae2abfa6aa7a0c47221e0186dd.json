{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\darya\\\\Documents\\\\TalantDemo\\\\src\\\\SignIn.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { LoginButton } from 'react-native-fbsdk';\n\nvar SignIn = function (_Component) {\n  _inherits(SignIn, _Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn() {\n    _classCallCheck(this, SignIn);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }\n      }, React.createElement(LoginButton, {\n        publishPermissions: [\"email\"],\n        onLoginFinished: function onLoginFinished(error, result) {\n          if (error) {\n            alert(\"Login failed with error: \" + error.message);\n          } else if (result.isCancelled) {\n            alert(\"Login was cancelled\");\n          } else {\n            alert(\"Login was successful with permissions: \" + result.grantedPermissions);\n          }\n        },\n        onLogoutFinished: function onLogoutFinished() {\n          return alert(\"User logged out\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SignIn;\n}(Component);\n\nexport { SignIn as default };\n;\nmodule.exports = SignIn;","map":{"version":3,"sources":["C:/Users/darya/Documents/TalantDemo/src/SignIn.js"],"names":["React","Component","LoginButton","SignIn","error","result","alert","message","isCancelled","grantedPermissions","module","exports"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;;IAEqBC,M;;;;;;;;;;;;;6BACR;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACI,QAAA,kBAAkB,EAAE,CAAC,OAAD,CADxB;AAEI,QAAA,eAAe,EACX,yBAACC,KAAD,EAAQC,MAAR,EAAmB;AACf,cAAID,KAAJ,EAAW;AACPE,YAAAA,KAAK,CAAC,8BAA8BF,KAAK,CAACG,OAArC,CAAL;AACH,WAFD,MAEO,IAAIF,MAAM,CAACG,WAAX,EAAwB;AAC3BF,YAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,WAFM,MAEA;AACHA,YAAAA,KAAK,CAAC,4CAA4CD,MAAM,CAACI,kBAApD,CAAL;AACH;AACJ,SAXT;AAaI,QAAA,gBAAgB,EAAE;AAAA,iBAAMH,KAAK,CAAC,iBAAD,CAAX;AAAA,SAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAkBH;;;;EApB+BL,S;;SAAfE,M;AAqBpB;AAEDO,MAAM,CAACC,OAAP,GAAiBR,MAAjB","sourcesContent":["import React, { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport { LoginButton } from 'react-native-fbsdk';\r\n\r\nexport default class SignIn extends Component {\r\n    render() {\r\n        return (\r\n            <View>\r\n                <LoginButton\r\n                    publishPermissions={[\"email\"]}\r\n                    onLoginFinished={\r\n                        (error, result) => {\r\n                            if (error) {\r\n                                alert(\"Login failed with error: \" + error.message);\r\n                            } else if (result.isCancelled) {\r\n                                alert(\"Login was cancelled\");\r\n                            } else {\r\n                                alert(\"Login was successful with permissions: \" + result.grantedPermissions)\r\n                            }\r\n                        }\r\n                    }\r\n                    onLogoutFinished={() => alert(\"User logged out\")}/>\r\n            </View>\r\n        );\r\n    }\r\n};\r\n\r\nmodule.exports = SignIn;"]},"metadata":{},"sourceType":"module"}