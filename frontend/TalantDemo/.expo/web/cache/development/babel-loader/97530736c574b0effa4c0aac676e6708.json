{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\darya\\\\Documents\\\\TalantDemo\\\\src\\\\SignIn.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar SignIn = function (_Component) {\n  _inherits(SignIn, _Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn(props) {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"onLogin\",\n    value: function onLogin() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      Alert.alert('Credentials', username + \" + \" + password);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        placeholder: 'Username',\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: 'Password',\n        secureTextEntry: true,\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        title: 'Login',\n        style: styles.input,\n        onPress: this.onLogin.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SignIn;\n}(Component);\n\nexport { SignIn as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%'\n  },\n  title: {\n    fontFamily: 'Roboto',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 32,\n    lineHeight: 37,\n    paddingLeft: 20,\n    paddingTop: 66\n  }\n});","map":{"version":3,"sources":["C:/Users/darya/Documents/TalantDemo/src/SignIn.js"],"names":["React","Component","SignIn","props","state","username","password","Alert","alert","styles","container","setState","input","onLogin","bind","StyleSheet","create","height","width","title","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","paddingLeft","paddingTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IAGqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAHe;AAOlB;;;;8BAES;AAAA,wBACyB,KAAKF,KAD9B;AAAA,UACEC,QADF,eACEA,QADF;AAAA,UACYC,QADZ,eACYA,QADZ;AAGNC,MAAAA,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA8BH,QAA9B,WAA4CC,QAA5C;AACH;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,QADtB;AAEI,QAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,iBAAc,MAAI,CAACM,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAd;AAAA,SAFlB;AAGI,QAAA,WAAW,EAAE,UAHjB;AAII,QAAA,KAAK,EAAEI,MAAM,CAACG,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,QADtB;AAEI,QAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,iBAAc,MAAI,CAACK,QAAL,CAAc;AAAEL,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAd;AAAA,SAFlB;AAGI,QAAA,WAAW,EAAE,UAHjB;AAII,QAAA,eAAe,EAAE,IAJrB;AAKI,QAAA,KAAK,EAAEG,MAAM,CAACG,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAeI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,KAAK,EAAEH,MAAM,CAACG,KAFlB;AAGI,QAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADJ;AAuBH;;;;EAxC+Bb,S;;SAAfC,M;AA0CrB,IAAMO,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAmB;AAC9BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,KAAK,EAAE;AAFA,GADmB;AAK9BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,QADT;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,UAAU,EAAE,MAHT;AAIHC,IAAAA,QAAQ,EAAE,EAJP;AAKHC,IAAAA,UAAU,EAAE,EALT;AAMHC,IAAAA,WAAW,EAAE,EANV;AAOHC,IAAAA,UAAU,EAAE;AAPT;AALuB,CAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet } from 'react-native';\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    onLogin() {\r\n        const { username, password } = this.state;\r\n\r\n        Alert.alert('Credentials', `${username} + ${password}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    value={this.state.username}\r\n                    onChangeText={(username) => this.setState({ username })}\r\n                    placeholder={'Username'}\r\n                    style={styles.input}\r\n                />\r\n                <TextInput\r\n                    value={this.state.password}\r\n                    onChangeText={(password) => this.setState({ password })}\r\n                    placeholder={'Password'}\r\n                    secureTextEntry={true}\r\n                    style={styles.input}\r\n                />\r\n\r\n                <Button\r\n                    title={'Login'}\r\n                    style={styles.input}\r\n                    onPress={this.onLogin.bind(this)}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    title: {\r\n        fontFamily: 'Roboto',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        lineHeight: 37,\r\n        paddingLeft: 20,\r\n        paddingTop: 66,\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}