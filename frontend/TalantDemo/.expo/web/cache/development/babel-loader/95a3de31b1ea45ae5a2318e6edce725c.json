{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\darya\\\\Documents\\\\TalantDemo\\\\src\\\\SignIn.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar SignIn = function (_Component) {\n  _inherits(SignIn, _Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn() {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"onLogin\",\n    value: function onLogin() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      Alert.alert('Credentials', \"email: \" + email + \" + password: \" + password);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, \"Sign in\"), React.createElement(TextInput, {\n        value: this.state.email,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        placeholder: \"email\",\n        placeholderTextColor: \"white\",\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: 'password',\n        secureTextEntry: true,\n        placeholderTextColor: \"white\",\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onLogin.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \" Sign Up / Login \")));\n    }\n  }]);\n\n  return SignIn;\n}(Component);\n\nexport { SignIn as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%'\n  },\n  title: {\n    fontFamily: 'Roboto',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 32,\n    lineHeight: 37,\n    paddingLeft: 20,\n    paddingTop: 66\n  }\n});","map":{"version":3,"sources":["C:/Users/darya/Documents/TalantDemo/src/SignIn.js"],"names":["React","SignIn","state","email","password","Alert","alert","styles","container","title","setState","input","button","onLogin","bind","buttonText","Component","StyleSheet","create","height","width","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","paddingLeft","paddingTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;IAGqBC,M;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,K;;;;;;8BAIE;AAAA,wBACsB,KAAKF,KAD3B;AAAA,UACEC,KADF,eACEA,KADF;AAAA,UACSC,QADT,eACSA,QADT;AAGNC,MAAAA,KAAK,CAACC,KAAN,CAAY,aAAZ,cAAqCH,KAArC,qBAA0DC,QAA1D;AACH;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAGI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KADtB;AAEI,QAAA,YAAY,EAAC,eAFjB;AAGI,QAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,iBAAW,MAAI,CAACO,QAAL,CAAc;AAACP,YAAAA,KAAK,EAALA;AAAD,WAAd,CAAX;AAAA,SAHlB;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,QAAA,oBAAoB,EAAC,OALzB;AAMI,QAAA,KAAK,EAAEI,MAAM,CAACI,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAWI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,QADtB;AAEI,QAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,iBAAc,MAAI,CAACM,QAAL,CAAc;AAACN,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAd;AAAA,SAFlB;AAGI,QAAA,WAAW,EAAE,UAHjB;AAII,QAAA,eAAe,EAAE,IAJrB;AAKI,QAAA,oBAAoB,EAAC,OALzB;AAMI,QAAA,KAAK,EAAEG,MAAM,CAACI,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAqBI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAEJ,MAAM,CAACK,MADlB;AAEI,QAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,CArBJ,CADJ;AA+BH;;;;EA3C+BC,S;;SAAff,M;AA8CrB,IAAMM,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAmB;AAC9BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,KAAK,EAAE;AAFA,GADmB;AAK9BX,EAAAA,KAAK,EAAE;AACHY,IAAAA,UAAU,EAAE,QADT;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,UAAU,EAAE,MAHT;AAIHC,IAAAA,QAAQ,EAAE,EAJP;AAKHC,IAAAA,UAAU,EAAE,EALT;AAMHC,IAAAA,WAAW,EAAE,EANV;AAOHC,IAAAA,UAAU,EAAE;AAPT;AALuB,CAAnB,CAAf","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, Text, Image, TouchableOpacity, TextInput } from 'react-native'\r\n\r\nexport default class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    };\r\n    onLogin() {\r\n        const { email, password } = this.state;\r\n\r\n        Alert.alert('Credentials', `email: ${email} + password: ${password}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Sign in</Text>\r\n\r\n                <TextInput\r\n                    value={this.state.email}\r\n                    keyboardType='email-address'\r\n                    onChangeText={(email) => this.setState({email})}\r\n                    placeholder='email'\r\n                    placeholderTextColor='white'\r\n                    style={styles.input}\r\n                />\r\n                <TextInput\r\n                    value={this.state.password}\r\n                    onChangeText={(password) => this.setState({password})}\r\n                    placeholder={'password'}\r\n                    secureTextEntry={true}\r\n                    placeholderTextColor='white'\r\n                    style={styles.input}\r\n                />\r\n\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={this.onLogin.bind(this)}\r\n                >\r\n                    <Text style={styles.buttonText}> Sign Up / Login </Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    title: {\r\n        fontFamily: 'Roboto',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        lineHeight: 37,\r\n        paddingLeft: 20,\r\n        paddingTop: 66,\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}